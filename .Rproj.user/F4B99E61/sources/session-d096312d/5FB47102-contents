library(readxl)
library(dplyr)
library(writexl)
library(stringr)
library(caret)
library(tidyverse)
library(tidyr)


#######################################################
##clean avto e'lon data
######################################################

# Read the data from your Excel files
data <- read_excel("G:/Meine Ablage/Data_solutions/Car market/data/avtoelon data 100_ with link.xlsx")
regions <- read_excel("G:/Meine Ablage/Data_solutions/Car market/data/Regions.xlsx")

########### REGIONS ############

# Change column names to ensure they are consistent
colnames(data) <- tolower(colnames(data))
colnames(regions) <- tolower(colnames(regions))

## since lat, long variables are added to the car dataset, we need to change the name of the lat variable in regions dataset
regions <- regions %>%
  mutate(lotin=lat) %>%
  select(-lat)

# Join the datasets
result <- left_join(data, regions, by = c("city1" = "cyr"))

# Replace 'city1' values with corresponding 'lat' values
result <- result %>%
  mutate(city1 = ifelse(!is.na(lotin), lotin, city1))

# Remove the 'lat' column and rewrite all data to a new 'result' data frame
result <- result %>%
  select(-lotin)

###########################################

data1 <-  result %>%
  filter(!is.na(`объем двигателя, л`), !is.na(price1), !is.na(city1), !is.na(fuel_type), !is.na(кузов), 
         !is.na(пробег), !is.na(`коробка передач`), !is.na(цвет), !is.na(`состояние краски`), !is.na(`link_item`))


clean <- data1 %>%
  filter(price1 > 2000 & price1 < 300000)
split_names <- strsplit(clean$title1_1, " ", fixed = TRUE, perl = TRUE)
brands <- sapply(split_names, `[`, 1)
models <- sapply(split_names, function(x) paste(x[-1], collapse = " "))


clean$id <- 1:nrow(clean)
clean$Brand <- brands
clean$Model <- models
clean<- clean[, c(4,10,11,13:15,23:31,40:42)]
##################### model and body type cleaning part 
clean %>% filter(Model == "Kadett") %>%
  group_by(кузов) %>%
  summarise(count = n(), .groups = 'drop')

table(clean$`коробка передач`)


a <- clean %>% group_by(Model) %>%
  summarise(count = n(), .groups = 'drop')

car_counts <- clean %>%
  group_by(Model, кузов) %>%
  summarise(count = n(), .groups = 'drop')

# # Widen data
car_counts_wide <- car_counts %>%
  pivot_wider(names_from = кузов, values_from = count, values_fill = 0)

####long format 

car_counts_long <- car_counts_wide %>%
  pivot_longer(cols = -Model, names_to = "кузов", values_to = "count")

# most frequent type 
frequent_body <- car_counts_long %>%
  group_by(Model) %>%
  summarise(new_body = кузов[which.max(count)], .groups = 'drop')

# Join to the main dataset
cars_with_new_body <- left_join(clean, frequent_body, by = "Model")

########transmission cleaning part

cars_new <- cars_with_new_body %>%
  mutate(new_transmission = case_when(
    `коробка передач` %in% c("Вариатор", "Робот", "Типтроник", "Автомат") ~ "Автомат",
    `коробка передач` == "Механика" ~ "Механика",
    TRUE ~ `коробка передач`))


######motor size cleaning part 

cars_motor <- cars_new %>%
  group_by(Model, `объем двигателя, л`) %>%
  summarise(count = n(), .groups = 'drop')


# most frequent type 
frequent_motor <- cars_motor %>%
  group_by(Model) %>%
  summarise(new_motor_size = `объем двигателя, л`[which.max(count)], .groups = 'drop')

# Join to the main dataset
cars_new1 <- left_join(cars_new, frequent_motor, by = "Model")
cars_new1 <- cars_new1[,c(1:6, 9, 11, 13:21)]



cars_dataset <- cars_new1
save(cars_dataset, file = "G:/Meine Ablage/Data_solutions/Car market/Car_prices_project/shiny/cars_dataset.rda")




#######################################################
##clean avto e'lon data for dashboard
######################################################

data <- read_excel("G:/Meine Ablage/Data_solutions/Car market/data/avtoelon data 100_ with link.xlsx")
regions <- read_excel("G:/Meine Ablage/Data_solutions/Car market/data/Regions.xlsx")

########### REGIONS ############

# Change column names to ensure they are consistent
colnames(data) <- tolower(colnames(data))
colnames(regions) <- tolower(colnames(regions))

## since lat, long variables are added to the car dataset, we need to change the name of the lat variable in regions dataset
regions <- regions %>%
  mutate(lotin=lat) %>%
  select(-lat)

# Join the datasets
result <- left_join(data, regions, by = c("city1" = "cyr"))

# Replace 'city1' values with corresponding 'lat' values
result <- result %>%
  mutate(city1 = ifelse(!is.na(lotin), lotin, city1))

# Remove the 'lat' column and rewrite all data to a new 'result' data frame
result <- result %>%
  select(-lotin)

###########################################

clean <- result %>%
  filter(price1 > 2000 & price1 < 300000)
split_names <- strsplit(clean$title1_1, " ", fixed = TRUE, perl = TRUE)
brands <- sapply(split_names, `[`, 1)
models <- sapply(split_names, function(x) paste(x[-1], collapse = " "))


clean$id <- 1:nrow(clean)
clean$Brand <- brands
clean$Model <- models
clean<- clean[, c(4,10,11,13:15,23:31,40:42)]
##################### model and body type cleaning part 
clean %>% filter(Model == "Kadett") %>%
  group_by(кузов) %>%
  summarise(count = n(), .groups = 'drop')

table(clean$`коробка передач`)


a <- clean %>% group_by(Model) %>%
  summarise(count = n(), .groups = 'drop')

car_counts <- clean %>%
  group_by(Model, кузов) %>%
  summarise(count = n(), .groups = 'drop')

# # Widen data
car_counts_wide <- car_counts %>%
  pivot_wider(names_from = кузов, values_from = count, values_fill = 0)

####long format 

car_counts_long <- car_counts_wide %>%
  pivot_longer(cols = -Model, names_to = "кузов", values_to = "count")

# most frequent type 
frequent_body <- car_counts_long %>%
  group_by(Model) %>%
  summarise(new_body = кузов[which.max(count)], .groups = 'drop')

# Join to the main dataset
cars_with_new_body <- left_join(clean, frequent_body, by = "Model")

########transmission cleaning part

cars_new <- cars_with_new_body %>%
  mutate(new_transmission = case_when(
    `коробка передач` %in% c("Вариатор", "Робот", "Типтроник", "Автомат") ~ "Автомат",
    `коробка передач` == "Механика" ~ "Механика",
    TRUE ~ `коробка передач`))


######motor size cleaning part 

cars_motor <- cars_new %>%
  group_by(Model, `объем двигателя, л`) %>%
  summarise(count = n(), .groups = 'drop')


# most frequent type 
frequent_motor <- cars_motor %>%
  group_by(Model) %>%
  summarise(new_motor_size = `объем двигателя, л`[which.max(count)], .groups = 'drop')

# Join to the main dataset
cars_new1 <- left_join(cars_new, frequent_motor, by = "Model")
cars_new1 <- cars_new1[,c(1:6, 9, 11, 13:21)]



cars_dataset_full <- cars_new1
save(cars_dataset_full, file = "G:/Meine Ablage/Data_solutions/Car market/Car_prices_project/shiny/cars_dataset_full.rda")







#######################################################
##clean e-notarius data
######################################################

e_notarius_avto <- read_excel("G:/Meine Ablage/Data_solutions/Car market/data/e_notarius_avto_yan-aprel.xlsx")

e_notarius_avto <- e_notarius_avto %>%
  pivot_longer(cols = -region, names_to = "month", values_to = "count")

e_notarius_avto <- e_notarius_avto %>%
  mutate(month = as.Date(as.numeric(month), origin = "1899-12-30")) %>%
  mutate(month = format(month, "%Y-%m"))
        
save(e_notarius_avto, file = "G:/Meine Ablage/Data_solutions/Car market/Car_prices_project/shiny/e_notarius_avto.rda")

 

