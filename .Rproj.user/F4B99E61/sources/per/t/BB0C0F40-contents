source('share_load.R')

ui <- fluidPage(
  theme = shinytheme("cerulean"),
  tags$head(
    tags$link(rel = "stylesheet", type = "text/css", href = "animate.min.css")
  ),
  tags$head(
    tags$style(HTML("

/* Set background color */
body {
  background-color: #f7f7f7;
}

/* Set font */
body {
  font-family: Arial;
  font-size: 14px;
}

/* Set navigation bar color */
.navbar {
  background-color: #003049;
  border-color: #003049;
}

/* Set navigation bar text color */
.navbar-inverse .navbar-nav>li>a {
  color: #003049;
}

/* Set tab labels color */
.nav-tabs>li>a {
  color: #555;
}

/* Set active tab color */
.nav-tabs>li.active>a, 
.nav-tabs>li.active>a:focus, 
.nav-tabs>li.active>a:hover {
  background-color: #003049;
  color: #fff;
}

/* Set text input style */
input[type=text], 
input[type=number], 
select {
  border-radius: 0;
  border-color: #ddd;
  background-color: #fff;
}

/* Set button style */
.btn-primary {
  background-color: #2c3e50;
  border-color: #2c3e50;
}

/* Set table style */
table {
  border-collapse: collapse;
  width: 100%;
}

th, td {
  text-align: right;
  padding: 6px;
}

th {
  font-weight: bold;
  background-color: #fff;
}

tr:nth-child(even) {
  background-color: #f2f2f2;
}

/* Set icon color */
.fa {
  color: #2c3e50;
}

h3 {
        color: #E51A4B;
      }
      
      
    "))
  ),
  
  navbarPage(
    tags$head(
      tags$style(HTML("
      .navbar { 
        position: fixed; 
        width: 100%; 
        z-index: 100; 
      }
    ")),
      tags$script(src = "https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML")
    ),
    title = tags$a(tags$img(src = "Logo/Logo2.png", height = "20px", width = "auto"),
                   href = "https://www.linkdata.uz/"),
    windowTitle = "MyApp",
    id = "nav",
    
    # Here are your panels
    # Wrap each of your panels in a div with class 'main-content'
    
    # tabPanel("Market Overview",
    #          ## 1.5 Line chart key commodities and services exports that are over $1bn the most recent years -------------
    #          h2(paste0('Market Overview')),
    #          p("Click on the model names in the legend area to show their trends"),
    #          fluidRow( column( width = 6, h4("Number of cars on sale"), plotlyOutput('cars_in_regions')  ),
    #                    column( width = 6, h4("Number of cars sold"), plotlyOutput('e_notarius') ) ),
    #          fluidRow( column( width = 6, h4("Price Dynamics"), plotlyOutput('PriceDynModels')  ),
    #                    column( width = 6, h4("Total number of cars in the market March-May 2023"), plotlyOutput('N_cars')  ) ),
    # ),
    # 
    # tabPanel("Descriptives",
    #          h2(paste0('Car Model Statistics')),
    #          p("Choose a model name in the filter area to show statistics related to it"),
    #          sidebarLayout(
    #            sidebarPanel(
    #              selectInput("model", "Car Model", c("Captiva",
    #                                                  "Cobalt",
    #                                                  "Damas",
    #                                                  "Epica",
    #                                                  "Gentra",
    #                                                  "Lacetti",
    #                                                  "Malibu",
    #                                                  "Malibu 2",
    #                                                  "Matiz",
    #                                                  "Matiz Best",
    #                                                  "Nexia 2 DOHC",
    #                                                  "Nexia 2 SOHC",
    #                                                  "Nexia 3",
    #                                                  "Spark",
    #                                                  "Tracker")),
    #              width = 2
    #            ),
    #            mainPanel(
    #              h4("Map"),
    #              fluidRow( leafletOutput('mapModel', width = "1200px", height = "600px") ),
    #              fluidRow( column( width = 6, h4("Price range"), plotlyOutput('histPlotPrice')  ) ,
    #                        column( width = 6, h4("Transmission type"), plotlyOutput('barPlotTransmission')  ) ),
    #              fluidRow( column( width = 6, h4("Total distance travelled by a vehicle"), plotlyOutput('histPlotProbeg')  ),
    #                        column( width = 6, h4("Fuel type"), plotlyOutput('barPlotFuel')  ) ),
    #              fluidRow( column( width = 6, h4("Color count"), plotlyOutput('hbarPlotColor')  ),
    #                        column( width = 6, h4("Number of cars across time"), plotlyOutput('lineModelsMonthly')  ) ),
    #            )
    #          )
    # ),

     
    tabPanel("Car Price Predictor",
             br(), br(), br(),
             sidebarLayout(
               sidebarPanel(
                 selectInput("car_region", "Region:", choices = unique(train_data$region_full)),
                 selectInput("car_brand", "Car Brand:", choices = unique(train_data$Brand1)),
                 selectInput("car_model", "Car Model:", choices = unique(train_data$Model1)),
                 numericInput("year", "Manufacture Year:", value = 2010, max = 2023),
                 numericInput("kilometrage", "Kilometrage:", value = 50000, min = 0),
                 selectInput("engine_volume", "Engine Volume:", choices = unique(train_data$new_motor_size)),
                 selectInput("fuel_type", "Fuel Type:", choices = unique(train_data$fuel_type)),
                 selectInput("body_type", "Body Type:", choices = unique(train_data$new_body)),
                 selectInput("transmission", "Transmission:", choices = unique(train_data$new_transmission)),
                 selectInput("color", "Color:", choices = unique(train_data$color)),
                 selectInput("paint_condition", "Paint Condition:", choices = unique(train_data$condtion)),
                 selectInput("drive", "Drive:", choices = unique(train_data$привод)),
                 h2(paste0("Additional features")),
                 selectizeInput("ex_features", "Exterior features:",
                                choices = ex_features, 
                                multiple = TRUE),
                 selectizeInput("optional_features", "Optional features:",
                                choices = optional_features, 
                                multiple = TRUE),
                 selectizeInput("optics", "Optic Features:",
                                choices = optics, 
                                multiple = TRUE),
                 selectizeInput("interior_features", "Interior Features:",
                                choices = interior_features, 
                                multiple = TRUE),
                 selectizeInput("audio_options", "Audio system options",
                                choices = audio_options, 
                                multiple = TRUE),
                 actionButton("predict", "Predict Car Price")
               ),
               
               mainPanel(
                 tags$div(
                   #class = "animate__animated animate__slideInLeft", 
                   style = "text-align: center; height: 550px;", 
                   uiOutput("car_image", height = "auto")
                 ), 
                 #h3("Estimated price of a car", align = "center"),
                 withSpinner(
                   uiOutput("predicted_price", style = "text-align:center; font-size: 48px;")
                 ),
                 br(), br(), br(),
                 h2(paste0("Variable Importance of Random Forest")),
                 fluidRow( column( width = 6, h4("Most important features"), plotlyOutput('varimportance_above1')  ),
                           column( width = 6, h4("Other features"), plotlyOutput('varimportance_below1')  ) ),
               )
             )
    )
  )
)

